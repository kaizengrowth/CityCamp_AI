name: Deploy CityCamp AI

on:
  push:
    branches: [ main, feature/AI-engineering ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ec2-user

          # Clone or update repository
          if [ -d "citycamp-ai" ]; then
            cd citycamp-ai
            git pull origin ${{ github.ref_name }}
          else
            git clone git@github.com:kalinr/CityCamp_AI.git citycamp-ai
            cd citycamp-ai
          fi

          # Set up production secrets
          mkdir -p secrets
          echo '${{ secrets.DATABASE_URL }}' > secrets/database_url
          echo '${{ secrets.SECRET_KEY }}' > secrets/secret_key
          echo '${{ secrets.OPENAI_API_KEY }}' > secrets/openai_api_key
          echo '${{ secrets.GEOCODIO_API_KEY }}' > secrets/geocodio_api_key

          # Stop existing containers
          docker stop citycamp-backend || true
          docker rm citycamp-backend || true

          # Build and run new container
          docker build -t citycamp-ai-backend ./backend/
          docker run -d --name citycamp-backend -p 8000:8000 \
            -v $(pwd)/secrets:/app/secrets \
            -v $(pwd)/backend:/app \
            citycamp-ai-backend

          # Health check
          sleep 30
          curl -f http://localhost:8000/health || exit 1
